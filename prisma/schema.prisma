// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:../databases/media.db?socket_timeout=50000&connection_limit=2&timeout=50000"
}

generator client {
  provider        = "prisma-client-js"
}

model User {
  id            String    @id
  username      String
  avatar        String?
  discriminator String
  public_flags  Int
  mute          Boolean
  deaf          Boolean
  nick          String?
  premium_since DateTime?
  joined_at     DateTime
  is_pending    Boolean   @default(false)
  pending       Boolean   @default(false)
  bot           Boolean   @default(false)
  banned_at     DateTime?
  deleted_at    DateTime?
  role          Role[]
  invites       Invite[]
  guild         Guild[]
}

model Role {
  id          String  @id
  name        String
  displayName String
  rawPosition Int
  color       Int
  hoist       Boolean
  managed     Boolean
  mentionable Boolean
  icon        String?
  tags        String?
  permissions String
  user        User[]
  guild       Guild[]
}

model Guild {
  id                          String          @id
  name                        String
  icon                        String?
  features                    String
  commands                    Command[]
  channels                    Channel[]
  bans                        Ban[]
  roles                       Role[]
  voiceStates                 VoiceState[]
  stageInstances              StageInstance[]
  invites                     Invite[]
  available                   Boolean
  shardId                     Int
  splash                      String?
  banner                      String?
  description                 String
  verificationLevel           String
  vanityURLCode               String?
  nsfwLevel                   String
  discoverySplash             String?
  memberCount                 Int
  large                       Boolean
  applicationId               String?
  afkTimeout                  Int
  afkChannelId                String?
  systemChannelId             String?
  premiumTier                 String
  premiumSubscriptionCount    Int
  explicitContentFilter       String
  mfaLevel                    String
  joinedTimestamp             DateTime
  defaultMessageNotifications String
  systemChannelFlags          Int             @default(0)
  maximumMembers              Int
  maximumPresences            Int?
  approximateMemberCount      Int?
  approximatePresenceCount    Int?
  vanityURLUses               String?
  rulesChannelId              String?
  publicUpdatesChannelId      String?
  preferredLocale             String
  ownerId                     String?
  emojis                      Emoji[]
  stickers                    Stickers[]
  textChannelId               String?
  user                        User[]
}

model Command {
  id                String  @id
  applicationId     String
  guildId           String
  type              String
  name              String
  description       String
  options           String
  defaultPermission Boolean
  guild             Guild[]
}

model Channel {
  type             String
  guild            Guild[]
  guildId          String
  parentId         String?
  nsfw             Boolean  @default(true)
  id               String   @id
  name             String
  rawPosition      Int
  topic            String?
  lastMessageId    String?
  rateLimitPerUser Int      @default(0)
  invites          Invite[]
}

model Ban {
  id    String  @id
  guild Guild[]
}

model VoiceState {
  id    String  @id
  guild Guild[]
}

model StageInstance {
  id String @id

  guild Guild[]
}

model Invite {
  code              String    @id
  presenceCount     Int?
  memberCount       Int?
  temporary         Boolean
  maxAge            Int
  uses              Int
  maxUses           Int
  targetUser        String?
  targetApplication String?
  targetType        String?
  createdTimestamp  DateTime
  expiresTimestamp  DateTime?
  stageInstance     String?
  guild             Guild[]
  inviter           User[]
  channel           Channel[]
}

model Emoji {
  animated       Boolean
  name           String
  id             String  @id
  guild          Guild[]
  requiresColons Boolean
  managed        Boolean
  available      Boolean
  roles          String
}

model Stickers {
  id    String  @id
  guild Guild[]
}
